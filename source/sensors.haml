#sensors.row
    .span12
        .page-header
            %h2 Sensors

    .span3
        %form.form-inline
            %fieldset
                %label.checkbox
                    %span.swatch
                    %pre#gyro-roll-value
                    %input#gyro-roll{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '0', 'checked' => 'checked'}
                    %span Gyro Roll
                %label.checkbox
                    %span.swatch
                    %input#gyro-pitch{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '1', 'checked' => 'checked'}
                    %pre#gyro-pitch-value
                    Gyro Pitch
                %label.checkbox
                    %span.swatch
                    %input#gyro-yaw{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '2', 'checked' => 'checked'}
                    %pre#gyro-yaw-value
                    Gyro Yaw
                %label.checkbox
                    %span.swatch
                    %input#axl-x{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '3', 'checked' => 'checked'}
                    %pre#axl-x-value
                    Axl X
                %label.checkbox
                    %span.swatch
                    %input#axl-y{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '4', 'checked' => 'checked'}
                    %pre#axl-y-value
                    Axl Y
                %label.checkbox
                    %span.swatch
                    %input#axl-z{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '5', 'checked' => 'checked'}
                    %pre#axl-z-value
                    Axl Z
                %label.checkbox
                    %span.swatch
                    %input#mag-x{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '6', 'checked' => 'checked'}
                    %pre#mag-x-value
                    Mag x
                %label.checkbox
                    %span.swatch
                    %input#mag-y{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '7', 'checked' => 'checked'}
                    %pre#mag-y-value
                    Mag Y
                %label.checkbox
                    %span.swatch
                    %input#mag-z{'onclick' => 'return toggleAxis($(this));', 'type' => 'checkbox', 'value' => '8', 'checked' => 'checked'}
                    %pre#mag-z-value
                    Mag Z
    .span9
        %canvas{:id => 'chart',:width => '700', :height => '250'}


:javascript
    function toggleAxis(checkbox) {
        $('#sensors input').each(function(i, o){
            if($(o).attr('id') == checkbox.attr('id')){
                console.log(checkbox.attr('checked'));
                if(checkbox.attr('checked') == 'checked'){
                    $($(o.parentNode).children()[0])
                    chart.addTimeSeries(axis[i], { strokeStyle: $($(o.parentNode).children()[0]).css('backgroundColor'), fillStyle: 'rgba(0,0,0, 0)', lineWidth: 3 });
                }
                else
                {
                    chart.removeTimeSeries(axis[i]);
                }
            }
        });
    }
    grid = {
        fillStyle:'#fff',
        strokeStyle: '#ddd',
        lineWidth: 1,
        millisPerLine: 100,
        verticalSections: 4
    };
    labels = {
        fillStyle:'#000'
    }

    options = {
        grid: grid,
        labels: labels,
        interpolation: 'line',
    }
    var chart = new SmoothieChart(options);

    // setup timeseries for every axis
    axis = []
    $('#sensors input').each(function(i,o){
        axis[i] = new TimeSeries();
        chart.addTimeSeries(axis[i], { strokeStyle: $($(o.parentNode).children()[0]).css('backgroundColor'), fillStyle: 'rgba(0,0,0, 0)', lineWidth: 3 });
    });
    chart.streamTo(document.getElementById("chart"), 100);

    function getLog() {
        $.ajax({
            url:host+'/?command=i',
            complete: function() {
                setTimeout(getLog,100); //now that the request is complete, do it again in 1 second
            },
            success: function(data, status) {
                $('#log').prepend(data.join(',') + '\n')
                now = new Date().getTime()
                $('#sensors input').each(function(i,o){
                    axis[i].append(now, data[$(o).val()]);
                    $('#' + $(o).attr('id') + '-value').text(data[$(o).val()])
                });
            }
        });

    }

    getLog();
